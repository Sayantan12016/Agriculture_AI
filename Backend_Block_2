import streamlit as st
import requests
import json
import pandas as pd

# Function to fetch weather data (Replace with actual API)
def get_weather_data(state, district):
    # Mock API URL (Replace with actual IMD API)
    api_url = f"https://api.open-meteo.com/v1/forecast?latitude=20.5937&longitude=78.9629&daily=precipitation_sum,temperature_2m_max&timezone=Asia/Kolkata"
    
    response = requests.get(api_url)
    if response.status_code == 200:
        return json.loads(response.text)
    else:
        st.error("⚠ Failed to fetch weather data. Please try again later.")
        return None

# Function for rule-based crop recommendation
def recommend_crop(rainfall, temperature, soil_type):
    """
    A simple rule-based system for crop recommendation.
    """
    if soil_type == "Sandy":
        if temperature > 30 and rainfall < 100:
            return "Millets"
        elif temperature < 30 and rainfall > 100:
            return "Groundnut"
        else:
            return "Maize"

    elif soil_type == "Clayey":
        if temperature > 28 and rainfall > 200:
            return "Paddy"
        elif rainfall < 100:
            return "Cotton"
        else:
            return "Sugarcane"

    elif soil_type == "Loamy":
        if temperature > 25 and rainfall > 150:
            return "Wheat"
        elif rainfall < 100:
            return "Chickpeas"
        else:
            return "Vegetables"

    elif soil_type == "Alluvial":
        if temperature > 27 and rainfall > 250:
            return "Rice"
        elif rainfall < 150:
            return "Pulses"
        else:
            return "Banana"

    return "Mixed Crops"

# Streamlit UI
st.title("🌾 Weather-Based Crop & Irrigation Advice (India-Specific)")

# User Input for State and District
states = ["Assam", "Rajasthan", "Tamil Nadu", "Maharashtra", "Punjab"]
state = st.selectbox("📍 Select Your State", states)
district = st.text_input("🏙 Enter Your District Name")
soil_type = st.selectbox("🌱 Select Soil Type", ["Sandy", "Clayey", "Loamy", "Alluvial"])

if st.button("🔍 Get Advice"):
    if district:
        weather_data = get_weather_data(state, district)
        if weather_data:
            st.success("✅ Weather Data Retrieved Successfully!")
            
            # Extract weather parameters
            rainfall = weather_data["daily"]["precipitation_sum"][0]  # First day's data
            temperature = weather_data["daily"]["temperature_2m_max"][0]
            
            st.write(f"🌧 *Rainfall:* {rainfall} mm")
            st.write(f"🌡 *Temperature:* {temperature} °C")
            
            # Get crop recommendation (Without ML)
            recommended_crop = recommend_crop(rainfall, temperature, soil_type)
            st.write(f"🌾 *Recommended Crop:* {recommended_crop}")
            
            # Irrigation Planning Advice
            if rainfall > 200:
                irrigation_advice = "🟢 Less irrigation needed due to high rainfall. Focus on drainage."
            elif rainfall > 100:
                irrigation_advice = "🟡 Moderate irrigation required. Consider supplementary watering."
            else:
                irrigation_advice = "🔴 High irrigation required. Ensure consistent water supply."
            
            st.write(f"💧 *Irrigation Advice:* {irrigation_advice}")
        else:
            st.error("❌ No data available for the selected region.")
    else:
        st.warning("⚠ Please enter a district name.")
